on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build React App
        run: npm run build
        env:
          CI: false

      - name: Package Application
        run: tar -czvf build.tar.gz -C build .

      - name: Transfer build to EC2
        if: contains(github.ref, 'develop')
        id: transfer
        run: |
          max_attempts=3
          attempt=0
          success=false
          while [ $attempt -lt $max_attempts ]; do
            echo "Starting SCP transfer (Attempt $((attempt+1)))..."
            scp -i ${{ secrets.SSH_KEY }} build.tar.gz ubuntu@${{ secrets.HOST }}:/tmp
            if [ $? -eq 0 ]; then
              echo "SCP transfer succeeded (Attempt $((attempt+1)))"
              success=true
              break
            else
              echo "SCP transfer failed (Attempt $((attempt+1)))"
              attempt=$((attempt+1))
            fi
          done
          if [ "$success" = false ]; then
            echo "SCP transfer failed after $max_attempts attempts"
            exit 1
          fi

      - name: Deploy to /var/www/html
        if: steps.transfer.outcome == 'success' && contains(github.ref, 'develop')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo rm -rf /var/www/html/*
            sudo tar -xzvf /tmp/build.tar.gz -C /var/www/html
            sudo rm /tmp/build.tar.gz
